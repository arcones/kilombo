import json
from unittest import TestCase

from kilombo.model.study_hierarchy import StudyHierarchy
from kilombo.service.external.ncbi import _extract_gse_from_summaries
from kilombo.service.external.ncbi import _extract_srp_from_summaries
from kilombo.service.external.ncbi import link_study_and_accessions


class Test(TestCase):
    def test__extract_gses_from_summaries_short_study_summaries(self):
        with open("./fixtures/6_study_summaries.json") as file:
            study_summaries = json.load(file)
        gses = []
        for study_summary in study_summaries:
            gses.append(_extract_gse_from_summaries(study_summaries[study_summary]))
        assert len(gses) == 6
        assert gses == ["GSE207275", "GSE189432", "GSE167593", "GSE174574", "GSE126815", "GSE150644"]

    def test__extract_gses_from_summaries_long_study_summaries(self):
        with open("./fixtures/202_study_summaries.json") as file:
            study_summaries = json.load(file)
        gses = []
        for study_summary in study_summaries:
            gse = _extract_gse_from_summaries(study_summaries[study_summary])
            if gse:
                gses.append(gse)
        assert len(gses) == 129
        assert gses == [
            "GSE239626",
            "GSE181952",
            "GSE195874",
            "GSE239874",
            "GSE239873",
            "GSE236464",
            "GSE236805",
            "GSE233951",
            "GSE224377",
            "GSE229375",
            "GSE231833",
            "GSE227954",
            "GSE212147",
            "GSE223137",
            "GSE225410",
            "GSE204769",
            "GSE204755",
            "GSE210776",
            "GSE180761",
            "GSE180760",
            "GSE180755",
            "GSE225254",
            "GSE144830",
            "GSE217431",
            "GSE221042",
            "GSE216028",
            "GSE216027",
            "GSE216026",
            "GSE161196",
            "GSE84424",
            "GSE163338",
            "GSE215819",
            "GSE215818",
            "GSE215817",
            "GSE207601",
            "GSE156742",
            "GSE209656",
            "GSE211739",
            "GSE210147",
            "GSE205291",
            "GSE203046",
            "GSE201391",
            "GSE201390",
            "GSE193770",
            "GSE168527",
            "GSE190289",
            "GSE184098",
            "GSE193240",
            "GSE193238",
            "GSE193236",
            "GSE173187",
            "GSE173182",
            "GSE173790",
            "GSE173789",
            "GSE188320",
            "GSE188152",
            "GSE188097",
            "GSE188022",
            "GSE187953",
            "GSE187897",
            "GSE187887",
            "GSE187883",
            "GSE187868",
            "GSE187863",
            "GSE187816",
            "GSE187807",
            "GSE187719",
            "GSE187718",
            "GSE187642",
            "GSE187607",
            "GSE187586",
            "GSE187539",
            "GSE187510",
            "GSE187459",
            "GSE187360",
            "GSE187340",
            "GSE187296",
            "GSE187218",
            "GSE187169",
            "GSE187164",
            "GSE187162",
            "GSE187137",
            "GSE186895",
            "GSE174083",
            "GSE177046",
            "GSE169216",
            "GSE166675",
            "GSE178085",
            "GSE141980",
            "GSE168288",
            "GSE172476",
            "GSE172475",
            "GSE130177",
            "GSE169189",
            "GSE161654",
            "GSE139006",
            "GSE159035",
            "GSE159033",
            "GSE163005",
            "GSE142086",
            "GSE142085",
            "GSE156902",
            "GSE133028",
            "GSE134895",
            "GSE146294",
            "GSE145044",
            "GSE129774",
            "GSE129773",
            "GSE143320",
            "GSE144496",
            "GSE138614",
            "GSE125581",
            "GSE128615",
            "GSE121703",
            "GSE130975",
            "GSE127969",
            "GSE122353",
            "GSE104899",
            "GSE104898",
            "GSE104897",
            "GSE110525",
            "GSE114652",
            "GSE113973",
            "GSE84699",
            "GSE94730",
            "GSE91387",
            "GSE79014",
            "GSE77598",
            "GSE66763",
        ]

    def test_get_study_gse_and_srp_if_present(self):
        with open("./fixtures/202_study_summaries.json") as file:
            study_summaries = json.load(file)
        study_hierarchy = StudyHierarchy(pending=study_summaries)
        link_study_and_accessions(study_hierarchy)
        assert len(study_hierarchy.successful) == 60
        assert study_hierarchy.successful == {
            "200066763": {"gse": "GSE66763", "srp": "SRP056049"},
            "200077598": {"gse": "GSE77598", "srp": "SRP069333"},
            "200079014": {"gse": "GSE79014", "srp": "SRP071311"},
            "200084424": {"gse": "GSE84424", "srp": "SRP078531"},
            "200084699": {"gse": "GSE84699", "srp": "SRP079236"},
            "200091387": {"gse": "GSE91387", "srp": "SRP094853"},
            "200094730": {"gse": "GSE94730", "srp": "SRP099127"},
            "200104897": {"gse": "GSE104897", "srp": "SRP119856"},
            "200104898": {"gse": "GSE104898", "srp": "SRP119855"},
            "200110525": {"gse": "GSE110525", "srp": "SRP132774"},
            "200113973": {"gse": "GSE113973", "srp": "SRP144462"},
            "200114652": {"gse": "GSE114652", "srp": "SRP148460"},
            "200121703": {"gse": "GSE121703", "srp": "SRP166658"},
            "200122353": {"gse": "GSE122353", "srp": "SRP168313"},
            "200125581": {"gse": "GSE125581", "srp": "SRP181863"},
            "200127969": {"gse": "GSE127969", "srp": "SRP180896"},
            "200128615": {"gse": "GSE128615", "srp": "SRP188970"},
            "200129773": {"gse": "GSE129773", "srp": "SRP192495"},
            "200129774": {"gse": "GSE129774", "srp": "SRP192496"},
            "200130177": {"gse": "GSE130177", "srp": "SRP193448"},
            "200130975": {"gse": "GSE130975", "srp": "SRP197361"},
            "200133028": {"gse": "GSE133028", "srp": "SRP201915"},
            "200134895": {"gse": "GSE134895", "srp": "SRP216410"},
            "200138614": {"gse": "GSE138614", "srp": "SRP224883"},
            "200139006": {"gse": "GSE139006", "srp": "SRP226024"},
            "200141980": {"gse": "GSE141980", "srp": "SRP237508"},
            "200142085": {"gse": "GSE142085", "srp": "SRP237763"},
            "200143320": {"gse": "GSE143320", "srp": "SRP299727"},
            "200144496": {"gse": "GSE144496", "srp": "SRP245908"},
            "200144830": {"gse": "GSE144830", "srp": "SRP247484"},
            "200145044": {"gse": "GSE145044", "srp": "SRP247976"},
            "200146294": {"gse": "GSE146294", "srp": "SRP251583"},
            "200156742": {"gse": "GSE156742", "srp": "SRP278607"},
            "200156902": {"gse": "GSE156902", "srp": "SRP278818"},
            "200159035": {"gse": "GSE159035", "srp": "SRP286403"},
            "200161196": {"gse": "GSE161196", "srp": "SRP292009"},
            "200161654": {"gse": "GSE161654", "srp": "SRP292941"},
            "200163005": {"gse": "GSE163005", "srp": "SRP297575"},
            "200163338": {"gse": "GSE163338", "srp": "SRP298165"},
            "200166675": {"gse": "GSE166675", "srp": "SRP306114"},
            "200168288": {"gse": "GSE168288", "srp": "SRP309366"},
            "200168527": {"gse": "GSE168527", "srp": "SRP309931"},
            "200169189": {"gse": "GSE169189", "srp": "SRP311303"},
            "200169216": {"gse": "GSE169216", "srp": "SRP311342"},
            "200172475": {"gse": "GSE172475", "srp": "SRP315686"},
            "200172476": {"gse": "GSE172476", "srp": "SRP315687"},
            "200173182": {"gse": "GSE173182", "srp": "SRP316022"},
            "200173187": {"gse": "GSE173187", "srp": "SRP316025"},
            "200173789": {"gse": "GSE173789", "srp": "SRP318646"},
            "200174083": {"gse": "GSE174083", "srp": "SRP318929"},
            "200177046": {"gse": "GSE177046", "srp": "SRP323730"},
            "200178085": {"gse": "GSE178085", "srp": "SRP323918"},
            "200180755": {"gse": "GSE180755", "srp": "SRP329681"},
            "200180760": {"gse": "GSE180760", "srp": "SRP329687"},
            "200180761": {"gse": "GSE180761", "srp": "SRP329685"},
            "200181952": {"gse": "GSE181952", "srp": "SRP332229"},
            "200184098": {"gse": "GSE184098", "srp": "SRP337022"},
            "200186895": {"gse": "GSE186895", "srp": "SRP343946"},
            "200188320": {"gse": "GSE188320", "srp": "SRP344813"},
            "200190289": {"gse": "GSE190289", "srp": "SRP349436"},
        }

    def test__extract_srps_from_summaries_short_study_summaries(self):
        with open("./fixtures/6_study_summaries.json") as file:
            study_summaries = json.load(file)
        srps = []
        for study_summary in study_summaries:
            srps.append(_extract_srp_from_summaries(study_summaries[study_summary]))
        assert len(list(filter(lambda srp: srp, srps))) == 5
        assert srps == [None, "SRP347471", "SRP308347", "SRP320164", "SRP185522", "SRP261818"]

    def test__extract_srps_from_summaries_long_study_summaries(self):
        with open("./fixtures/202_study_summaries.json") as file:
            study_summaries = json.load(file)
        srps = []
        for study_summary in study_summaries:
            srps.append(_extract_srp_from_summaries(study_summaries[study_summary]))
        assert len(list(filter(lambda srp: srp, srps))) == 60
        assert srps == [
            None,
            "SRP332229",
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            "SRP329685",
            "SRP329687",
            "SRP329681",
            None,
            "SRP247484",
            None,
            None,
            None,
            None,
            None,
            "SRP292009",
            "SRP078531",
            "SRP298165",
            None,
            None,
            None,
            None,
            "SRP278607",
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            "SRP309931",
            "SRP349436",
            "SRP337022",
            None,
            None,
            None,
            "SRP316025",
            "SRP316022",
            None,
            "SRP318646",
            "SRP344813",
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            "SRP343946",
            "SRP318929",
            "SRP323730",
            "SRP311342",
            "SRP306114",
            "SRP323918",
            "SRP237508",
            "SRP309366",
            "SRP315687",
            "SRP315686",
            "SRP193448",
            "SRP311303",
            "SRP292941",
            "SRP226024",
            "SRP286403",
            None,
            "SRP297575",
            None,
            "SRP237763",
            "SRP278818",
            "SRP201915",
            "SRP216410",
            "SRP251583",
            "SRP247976",
            "SRP192496",
            "SRP192495",
            "SRP299727",
            "SRP245908",
            "SRP224883",
            "SRP181863",
            "SRP188970",
            "SRP166658",
            "SRP197361",
            "SRP180896",
            "SRP168313",
            None,
            "SRP119855",
            "SRP119856",
            "SRP132774",
            "SRP148460",
            "SRP144462",
            "SRP079236",
            "SRP099127",
            "SRP094853",
            "SRP071311",
            "SRP069333",
            "SRP056049",
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ]
